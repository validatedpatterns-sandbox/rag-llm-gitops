kind: Deployment
apiVersion: apps/v1
metadata:
  name: ui-multiprovider-rag-redis
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app: ui-multiprovider-rag-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui-multiprovider-rag-redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ui-multiprovider-rag-redis
    spec:
      volumes:
        - name: providerconfig
          configMap:
            name: providerconfig
            defaultMode: 420
        - name: openai
          secret:
            secretName: openai
            defaultMode: 420
        - name: redis-schema
          configMap:
            name: redis-schema
            items:
              - key: redis_schema.yaml
                path: redis_schema.yaml
            defaultMode: 420
        - name: cache-volume
          emptyDir:
            sizeLimit: 2Gi
      containers:
        - resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: '1'
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /queue/status
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: server
          livenessProbe:
            httpGet:
              path: /queue/status
              port: http
              scheme: HTTP
            timeoutSeconds: 8
            periodSeconds: 100
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: redb-my-doc
                  key: password
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CONFIG_FILE
              value: /app-root/config/config.yaml
            - name: APP_TITLE
              value: Talk with your documentation
            - name: REDIS_URL
              value: >-
                redis://default:$(DB_PASS)@my-doc-headless.$(NAMESPACE).svc.cluster.local:10225
            - name: REDIS_INDEX
              value: docs
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 7860
              protocol: TCP
          imagePullPolicy: Always
          startupProbe:
            httpGet:
              path: /queue/status
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 24
          volumeMounts:
            - name: providerconfig
              mountPath: /app-root/config
            - name: openai
              mountPath: /app-root/config/openai
            - name: redis-schema
              mountPath: /opt/app-root/src/redis_schema.yaml
              subPath: redis_schema.yaml
            - name: cache-volume
              mountPath: /opt/app-root/src/assets/proposal-docs
          terminationMessagePolicy: File
          image: 'quay.io/sauagarw/gradio-tgi-multi-model-rag-redis:latest'
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
